use tui;
use tui::list;
use tui::text;
use tui::input_handler;

{
    let selected = 0;
    let action_triggered = never();

    let items = [line("Open"), line("Save"), line("Close"), line("Exit")];

    let handle_event = |e: Event| -> [`Stop, `Continue] select e {
        `Key(k) => select k.kind {
            `Press => select k.code {
                // ... navigation keys ...
                k@`Enter => {
                    action_triggered <- k ~ selected;
                    `Stop
                },
                _ => `Continue
            },
            _ => `Continue
        },
        _ => `Continue
    };

    select action_triggered {
        0 => net::write("/app/action", "open")?,
        1 => net::write("/app/action", "save")?,
        2 => net::write("/app/action", "close")?,
        3 => net::write("/app/action", "exit")?,
        _ => never()
    }
}
